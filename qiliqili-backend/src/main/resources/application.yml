server:
  port: 8080
spring:
  application:
    name: qiliqili
  #  profiles:
  #    active: "@profiles.active@"
  security:
    jwt:
      key: jwt-key
      # jwt ????????
      expire: 7
  servlet:
    multipart:
      # 限制单个文件的上传大小
      max-file-size: 300MB
      max-request-size: 300MB
      # 设置懒解析，提升上传性能
      resolve-lazily: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/teriteri?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Hong_Kong
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # ?????????????
      initial-size: 5
      # ??????????
      min-idle: 5
      # ?????????
      max-active: 20
      # ????????????????
      max-wait: 60000
      # ??????????????????timeBetweenEvictionRunsMillis???validationQuery?????????
      test-while-idle: true
      # ?????????????testWhileIdel?????
      time-between-eviction-runs-millis: 60000
      # ????????????????????????????????????(??????????????)
      min-evictable-idle-time-millis: 30000
      # ??????????????sql ?????????(oracle?? select 1 from dual)
      validation-query: select 'x'
      # ????????validationQuery????????,???????,???true
      test-on-borrow: false
      # ????????validationQuery????????,???????,???true
      test-on-return: false
      # ????preparedStatement, ???PSCache,PSCache???????????????????oracle,?mysql??????
      pool-prepared-statements: false
      # ????????filters????????sql?????stat: ?????Slf4j:?????waLL: ??sqL??
      filters: stat,wall,slf4j
      # ???PSCache???????0????0??poolPreparedStatements???????true??Druid??????Oracle?PSCache??????????????????????????100
      max-pool-prepared-statement-per-connection-size: -1
      # ????DruidDataSource?????
      use-global-data-source-stat: true
      # ??connectProperties?????mergeSql????SQL??
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

      web-stat-filter:
        # ????StatFilter???true
        enabled: true
        # ??????
        url-pattern: /*
        # ???????
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico

      stat-view-servlet:
        # ????StatViewServlet???true
        enabled: true
        # ?????/druid?????StatViewServlet
        url-pattern: /druid/*
        # ????????
        reset-enable: false
        # ?????????????????root
        login-username: druid
        login-password: druid
        # IP???
        allow: 127.0.0.1
        # IP??????????deny???allow?
        deny:
  data:
    redis:
      # redis ??
      port: 6379
      # redis ??
      host: 127.0.0.1
      #      host: 14.103.182.203
      # redis ??
      password:
      # redis??????????
      timeout: 10000
      # ?????????0
      database: 1
  rabbitmq:
    # rabbitmq ??
    host: 127.0.0.1
    # rabbitmq ??
    port: 5672
    # rabbitmq ???
    username: guest
    # rabbitmq ??
    password: guest

  idleTimeout: 10000
elasticsearch:
  # elasticsearch????
  host: 192.168.137.60
  port: 9200
  username: elastic
  password: 123456

springdoc:
  api-docs:
    path: /v3/api-docs  # Default path for OpenAPI JSON
  swagger-ui:
    path: /swagger-ui.html  # Default Swagger UI path
    enabled: true
  packages-to-scan: com.example.qiliqili.controller  # Your package with controllers

knife4j:
  enable: true  # Enable Knife4j enhancements
  setting:
    language: zh_cn
  openapi:
    title: "My API Documentation"
    description: "API documentation for Spring Boot 3 with Knife4j"
    version: "1.0.0"
    contact:
      name: "Your Name"
      email: "your.email@example.com"
    url: "https://example.com"
minio:
  endpoint: http://127.0.0.1:9005
  accessKey: uHqaA2Bg1uyHSsMVMfSa
  secretKey: 6wiLS2g76s130RiVw3VYO82uKEbVEkprF9kILaKQ
  videoBucket: qiliqili-video
  videoChunkBucket: qiliqili-videochunk
  videoCoverBucket: qiliqili-videocover
  chunkSize: 10*1024*1024
  userAvatarBucket: qiliqili-useravatarbucket

directory:
  # ????????
  video: public/video/
  # ??????
  chunk: public/chunk/
  # ????????
  cover: public/img/cover/